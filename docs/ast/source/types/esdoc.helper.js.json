{
  "type": "File",
  "start": 0,
  "end": 3053,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 67,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3053,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 67,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataTypeView\n ",
        "start": 0,
        "end": 135,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * Topology enum.\n * @typedef {Object} Topology\n * @property {number} [FULL_MESH=0] Full mesh topology.\n ",
        "start": 136,
        "end": 247,
        "loc": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * The state fo the signaling server for WebRTC.\n * @typedef {Object} SignalingState\n * @property {number} [CONNECTING=0] The connection is not yet open.\n * @property {number} [OPEN=1] The connection is open and ready to communicate.\n * @property {number} [FIRST_CONNECTED=2] `RTCDataChannel` has been established\n * with one of the web group member. From now the signaling is no longer needed,\n * because the next of the joining process will pass through this member.\n * @property {number} [READY_TO_JOIN_OTHERS=3] You are successfully joined a\n * web group and ready to join others.\n * @property {number} [CLOSED=4] The connection is closed.\n ",
        "start": 248,
        "end": 899,
        "loc": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * {@link WebGroup} state enum.\n * @typedef {Object} WebGroupState\n * @property {number} [JOINING=0] You are joining the web group.\n * @property {number} [JOINED=1] You have successfully joined the web group\n * and ready to broadcast messages via `send` method.\n * @property {number} [LEFT=2] You have left the web group. If the connection\n * to the web group has lost and `autoRejoin=true`, then the state would be `LEFT`,\n * (usually during a relatively short period) before the rejoining process start.\n ",
        "start": 900,
        "end": 1413,
        "loc": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
        "start": 1414,
        "end": 1954,
        "loc": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJS.http.Server|NodeJS.https.Server} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
        "start": 1955,
        "end": 2634,
        "loc": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
        "start": 2635,
        "end": 2729,
        "loc": {
          "start": {
            "line": 55,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
        "start": 2730,
        "end": 2852,
        "loc": {
          "start": {
            "line": 58,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {NodeJS.http.Server} https://nodejs.org/api/http.html#http_class_http_server\n ",
        "start": 2853,
        "end": 2950,
        "loc": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 63,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {NodeJS.https.Server} https://nodejs.org/api/https.html#https_class_https_server\n ",
        "start": 2951,
        "end": 3052,
        "loc": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 66,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataTypeView\n ",
      "start": 0,
      "end": 135,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Topology enum.\n * @typedef {Object} Topology\n * @property {number} [FULL_MESH=0] Full mesh topology.\n ",
      "start": 136,
      "end": 247,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The state fo the signaling server for WebRTC.\n * @typedef {Object} SignalingState\n * @property {number} [CONNECTING=0] The connection is not yet open.\n * @property {number} [OPEN=1] The connection is open and ready to communicate.\n * @property {number} [FIRST_CONNECTED=2] `RTCDataChannel` has been established\n * with one of the web group member. From now the signaling is no longer needed,\n * because the next of the joining process will pass through this member.\n * @property {number} [READY_TO_JOIN_OTHERS=3] You are successfully joined a\n * web group and ready to join others.\n * @property {number} [CLOSED=4] The connection is closed.\n ",
      "start": 248,
      "end": 899,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} state enum.\n * @typedef {Object} WebGroupState\n * @property {number} [JOINING=0] You are joining the web group.\n * @property {number} [JOINED=1] You have successfully joined the web group\n * and ready to broadcast messages via `send` method.\n * @property {number} [LEFT=2] You have left the web group. If the connection\n * to the web group has lost and `autoRejoin=true`, then the state would be `LEFT`,\n * (usually during a relatively short period) before the rejoining process start.\n ",
      "start": 900,
      "end": 1413,
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
      "start": 1414,
      "end": 1954,
      "loc": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJS.http.Server|NodeJS.https.Server} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
      "start": 1955,
      "end": 2634,
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
      "start": 2635,
      "end": 2729,
      "loc": {
        "start": {
          "line": 55,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
      "start": 2730,
      "end": 2852,
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJS.http.Server} https://nodejs.org/api/http.html#http_class_http_server\n ",
      "start": 2853,
      "end": 2950,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJS.https.Server} https://nodejs.org/api/https.html#https_class_https_server\n ",
      "start": 2951,
      "end": 3052,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataTypeView\n ",
      "start": 0,
      "end": 135,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Topology enum.\n * @typedef {Object} Topology\n * @property {number} [FULL_MESH=0] Full mesh topology.\n ",
      "start": 136,
      "end": 247,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The state fo the signaling server for WebRTC.\n * @typedef {Object} SignalingState\n * @property {number} [CONNECTING=0] The connection is not yet open.\n * @property {number} [OPEN=1] The connection is open and ready to communicate.\n * @property {number} [FIRST_CONNECTED=2] `RTCDataChannel` has been established\n * with one of the web group member. From now the signaling is no longer needed,\n * because the next of the joining process will pass through this member.\n * @property {number} [READY_TO_JOIN_OTHERS=3] You are successfully joined a\n * web group and ready to join others.\n * @property {number} [CLOSED=4] The connection is closed.\n ",
      "start": 248,
      "end": 899,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} state enum.\n * @typedef {Object} WebGroupState\n * @property {number} [JOINING=0] You are joining the web group.\n * @property {number} [JOINED=1] You have successfully joined the web group\n * and ready to broadcast messages via `send` method.\n * @property {number} [LEFT=2] You have left the web group. If the connection\n * to the web group has lost and `autoRejoin=true`, then the state would be `LEFT`,\n * (usually during a relatively short period) before the rejoining process start.\n ",
      "start": 900,
      "end": 1413,
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
      "start": 1414,
      "end": 1954,
      "loc": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJS.http.Server|NodeJS.https.Server} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
      "start": 1955,
      "end": 2634,
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
      "start": 2635,
      "end": 2729,
      "loc": {
        "start": {
          "line": 55,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
      "start": 2730,
      "end": 2852,
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJS.http.Server} https://nodejs.org/api/http.html#http_class_http_server\n ",
      "start": 2853,
      "end": 2950,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJS.https.Server} https://nodejs.org/api/https.html#https_class_https_server\n ",
      "start": 2951,
      "end": 3052,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3053,
      "end": 3053,
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 67,
          "column": 0
        }
      }
    }
  ]
}