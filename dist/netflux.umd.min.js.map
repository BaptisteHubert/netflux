{"version":3,"file":"netflux.umd.min.js","sources":["../node_modules/rxjs/util/tryCatch.js","../node_modules/rxjs/Subscription.js","../src/proto/index.js","../node_modules/rxjs/util/root.js","../node_modules/rxjs/util/isFunction.js","../node_modules/rxjs/util/isArray.js","../node_modules/rxjs/util/isObject.js","../node_modules/rxjs/util/errorObject.js","../node_modules/rxjs/util/UnsubscriptionError.js","../node_modules/rxjs/Observer.js","../node_modules/rxjs/symbol/rxSubscriber.js","../node_modules/rxjs/Subscriber.js","../node_modules/rxjs/util/toSubscriber.js","../node_modules/rxjs/symbol/observable.js","../node_modules/rxjs/Observable.js","../node_modules/rxjs/util/ObjectUnsubscribedError.js","../node_modules/rxjs/SubjectSubscription.js","../node_modules/rxjs/Subject.js","../node_modules/rxjs/operator/filter.js","../node_modules/rxjs/add/operator/filter.js","../node_modules/rxjs/BehaviorSubject.js","../node_modules/rxjs/operator/map.js","../node_modules/rxjs/add/operator/map.js","../node_modules/rxjs/scheduler/Action.js","../node_modules/rxjs/scheduler/AsyncAction.js","../node_modules/rxjs/scheduler/QueueAction.js","../node_modules/rxjs/Scheduler.js","../node_modules/rxjs/scheduler/AsyncScheduler.js","../node_modules/rxjs/scheduler/QueueScheduler.js","../node_modules/rxjs/scheduler/queue.js","../node_modules/rxjs/Notification.js","../node_modules/rxjs/operator/observeOn.js","../node_modules/rxjs/ReplaySubject.js"],"sourcesContent":["\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n\"use strict\";\n\nvar aspromise = asPromise;\n\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\n\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\nfunction asPromise(fn, ctx /*, varargs */) {\n    var params = new Array(arguments.length - 1),\n        offset = 0,\n        index = 2,\n        pending = true;\n    while (index < arguments.length) {\n        params[offset++] = arguments[index++];\n    }return new Promise(function executor(resolve, reject) {\n        params[offset] = function callback(err /*, varargs */) {\n            if (pending) {\n                pending = false;\n                if (err) reject(err);else {\n                    var params = new Array(arguments.length - 1),\n                        offset = 0;\n                    while (offset < params.length) {\n                        params[offset++] = arguments[offset];\n                    }resolve.apply(null, params);\n                }\n            }\n        };\n        try {\n            fn.apply(ctx || null, params);\n        } catch (err) {\n            if (pending) {\n                pending = false;\n                reject(err);\n            }\n        }\n    });\n}\n\nvar base64_1 = createCommonjsModule(function (module, exports) {\n    \"use strict\";\n\n    /**\r\n     * A minimal base64 implementation for number arrays.\r\n     * @memberof util\r\n     * @namespace\r\n     */\n\n    var base64 = exports;\n\n    /**\r\n     * Calculates the byte length of a base64 encoded string.\r\n     * @param {string} string Base64 encoded string\r\n     * @returns {number} Byte length\r\n     */\n    base64.length = function length(string) {\n        var p = string.length;\n        if (!p) return 0;\n        var n = 0;\n        while (--p % 4 > 1 && string.charAt(p) === \"=\") {\n            ++n;\n        }return Math.ceil(string.length * 3) / 4 - n;\n    };\n\n    // Base64 encoding table\n    var b64 = new Array(64);\n\n    // Base64 decoding table\n    var s64 = new Array(123);\n\n    // 65..90, 97..122, 48..57, 43, 47\n    for (var i = 0; i < 64;) {\n        s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\n    } /**\r\n       * Encodes a buffer to a base64 encoded string.\r\n       * @param {Uint8Array} buffer Source buffer\r\n       * @param {number} start Source start\r\n       * @param {number} end Source end\r\n       * @returns {string} Base64 encoded string\r\n       */\n    base64.encode = function encode(buffer, start, end) {\n        var parts = null,\n            chunk = [];\n        var i = 0,\n            // output index\n        j = 0,\n            // goto index\n        t; // temporary\n        while (start < end) {\n            var b = buffer[start++];\n            switch (j) {\n                case 0:\n                    chunk[i++] = b64[b >> 2];\n                    t = (b & 3) << 4;\n                    j = 1;\n                    break;\n                case 1:\n                    chunk[i++] = b64[t | b >> 4];\n                    t = (b & 15) << 2;\n                    j = 2;\n                    break;\n                case 2:\n                    chunk[i++] = b64[t | b >> 6];\n                    chunk[i++] = b64[b & 63];\n                    j = 0;\n                    break;\n            }\n            if (i > 8191) {\n                (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n                i = 0;\n            }\n        }\n        if (j) {\n            chunk[i++] = b64[t];\n            chunk[i++] = 61;\n            if (j === 1) chunk[i++] = 61;\n        }\n        if (parts) {\n            if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n            return parts.join(\"\");\n        }\n        return String.fromCharCode.apply(String, chunk.slice(0, i));\n    };\n\n    var invalidEncoding = \"invalid encoding\";\n\n    /**\r\n     * Decodes a base64 encoded string to a buffer.\r\n     * @param {string} string Source string\r\n     * @param {Uint8Array} buffer Destination buffer\r\n     * @param {number} offset Destination offset\r\n     * @returns {number} Number of bytes written\r\n     * @throws {Error} If encoding is invalid\r\n     */\n    base64.decode = function decode(string, buffer, offset) {\n        var start = offset;\n        var j = 0,\n            // goto index\n        t; // temporary\n        for (var i = 0; i < string.length;) {\n            var c = string.charCodeAt(i++);\n            if (c === 61 && j > 1) break;\n            if ((c = s64[c]) === undefined) throw Error(invalidEncoding);\n            switch (j) {\n                case 0:\n                    t = c;\n                    j = 1;\n                    break;\n                case 1:\n                    buffer[offset++] = t << 2 | (c & 48) >> 4;\n                    t = c;\n                    j = 2;\n                    break;\n                case 2:\n                    buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\n                    t = c;\n                    j = 3;\n                    break;\n                case 3:\n                    buffer[offset++] = (t & 3) << 6 | c;\n                    j = 0;\n                    break;\n            }\n        }\n        if (j === 1) throw Error(invalidEncoding);\n        return offset - start;\n    };\n\n    /**\r\n     * Tests if the specified string appears to be base64 encoded.\r\n     * @param {string} string String to test\r\n     * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n     */\n    base64.test = function test(string) {\n        return (/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string)\n        );\n    };\n});\n\n\"use strict\";\n\nvar eventemitter = EventEmitter;\n\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\nfunction EventEmitter() {\n\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\n    this._listeners = {};\n}\n\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\n        fn: fn,\n        ctx: ctx || this\n    });\n    return this;\n};\n\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.off = function off(evt, fn) {\n    if (evt === undefined) this._listeners = {};else {\n        if (fn === undefined) this._listeners[evt] = [];else {\n            var listeners = this._listeners[evt];\n            for (var i = 0; i < listeners.length;) {\n                if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n            }\n        }\n    }\n    return this;\n};\n\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.emit = function emit(evt) {\n    var listeners = this._listeners[evt];\n    if (listeners) {\n        var args = [],\n            i = 1;\n        for (; i < arguments.length;) {\n            args.push(arguments[i++]);\n        }for (i = 0; i < listeners.length;) {\n            listeners[i].fn.apply(listeners[i++].ctx, args);\n        }\n    }\n    return this;\n};\n\n\"use strict\";\n\nvar float_1 = factory(factory);\n\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\n\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\n\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\n\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\n\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\n\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\n\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\n\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\n\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\n\n// Factory function for the purpose of node-based testing in modified global environments\nfunction factory(exports) {\n\n    // float: typed array\n    if (typeof Float32Array !== \"undefined\") (function () {\n\n        var f32 = new Float32Array([-0]),\n            f8b = new Uint8Array(f32.buffer),\n            le = f8b[3] === 128;\n\n        function writeFloat_f32_cpy(val, buf, pos) {\n            f32[0] = val;\n            buf[pos] = f8b[0];\n            buf[pos + 1] = f8b[1];\n            buf[pos + 2] = f8b[2];\n            buf[pos + 3] = f8b[3];\n        }\n\n        function writeFloat_f32_rev(val, buf, pos) {\n            f32[0] = val;\n            buf[pos] = f8b[3];\n            buf[pos + 1] = f8b[2];\n            buf[pos + 2] = f8b[1];\n            buf[pos + 3] = f8b[0];\n        }\n\n        /* istanbul ignore next */\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\n        /* istanbul ignore next */\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\n\n        function readFloat_f32_cpy(buf, pos) {\n            f8b[0] = buf[pos];\n            f8b[1] = buf[pos + 1];\n            f8b[2] = buf[pos + 2];\n            f8b[3] = buf[pos + 3];\n            return f32[0];\n        }\n\n        function readFloat_f32_rev(buf, pos) {\n            f8b[3] = buf[pos];\n            f8b[2] = buf[pos + 1];\n            f8b[1] = buf[pos + 2];\n            f8b[0] = buf[pos + 3];\n            return f32[0];\n        }\n\n        /* istanbul ignore next */\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\n        /* istanbul ignore next */\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\n\n        // float: ieee754\n    })();else (function () {\n\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\n            var sign = val < 0 ? 1 : 0;\n            if (sign) val = -val;\n            if (val === 0) writeUint(1 / val > 0 ? /* positive */0 : /* negative 0 */2147483648, buf, pos);else if (isNaN(val)) writeUint(2143289344, buf, pos);else if (val > 3.4028234663852886e+38) // +-Infinity\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);else if (val < 1.1754943508222875e-38) // denormal\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);else {\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\n            }\n        }\n\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\n\n        function readFloat_ieee754(readUint, buf, pos) {\n            var uint = readUint(buf, pos),\n                sign = (uint >> 31) * 2 + 1,\n                exponent = uint >>> 23 & 255,\n                mantissa = uint & 8388607;\n            return exponent === 255 ? mantissa ? NaN : sign * Infinity : exponent === 0 // denormal\n            ? sign * 1.401298464324817e-45 * mantissa : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\n        }\n\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\n    })();\n\n    // double: typed array\n    if (typeof Float64Array !== \"undefined\") (function () {\n\n        var f64 = new Float64Array([-0]),\n            f8b = new Uint8Array(f64.buffer),\n            le = f8b[7] === 128;\n\n        function writeDouble_f64_cpy(val, buf, pos) {\n            f64[0] = val;\n            buf[pos] = f8b[0];\n            buf[pos + 1] = f8b[1];\n            buf[pos + 2] = f8b[2];\n            buf[pos + 3] = f8b[3];\n            buf[pos + 4] = f8b[4];\n            buf[pos + 5] = f8b[5];\n            buf[pos + 6] = f8b[6];\n            buf[pos + 7] = f8b[7];\n        }\n\n        function writeDouble_f64_rev(val, buf, pos) {\n            f64[0] = val;\n            buf[pos] = f8b[7];\n            buf[pos + 1] = f8b[6];\n            buf[pos + 2] = f8b[5];\n            buf[pos + 3] = f8b[4];\n            buf[pos + 4] = f8b[3];\n            buf[pos + 5] = f8b[2];\n            buf[pos + 6] = f8b[1];\n            buf[pos + 7] = f8b[0];\n        }\n\n        /* istanbul ignore next */\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\n        /* istanbul ignore next */\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\n\n        function readDouble_f64_cpy(buf, pos) {\n            f8b[0] = buf[pos];\n            f8b[1] = buf[pos + 1];\n            f8b[2] = buf[pos + 2];\n            f8b[3] = buf[pos + 3];\n            f8b[4] = buf[pos + 4];\n            f8b[5] = buf[pos + 5];\n            f8b[6] = buf[pos + 6];\n            f8b[7] = buf[pos + 7];\n            return f64[0];\n        }\n\n        function readDouble_f64_rev(buf, pos) {\n            f8b[7] = buf[pos];\n            f8b[6] = buf[pos + 1];\n            f8b[5] = buf[pos + 2];\n            f8b[4] = buf[pos + 3];\n            f8b[3] = buf[pos + 4];\n            f8b[2] = buf[pos + 5];\n            f8b[1] = buf[pos + 6];\n            f8b[0] = buf[pos + 7];\n            return f64[0];\n        }\n\n        /* istanbul ignore next */\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\n        /* istanbul ignore next */\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\n\n        // double: ieee754\n    })();else (function () {\n\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\n            var sign = val < 0 ? 1 : 0;\n            if (sign) val = -val;\n            if (val === 0) {\n                writeUint(0, buf, pos + off0);\n                writeUint(1 / val > 0 ? /* positive */0 : /* negative 0 */2147483648, buf, pos + off1);\n            } else if (isNaN(val)) {\n                writeUint(0, buf, pos + off0);\n                writeUint(2146959360, buf, pos + off1);\n            } else if (val > 1.7976931348623157e+308) {\n                // +-Infinity\n                writeUint(0, buf, pos + off0);\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\n            } else {\n                var mantissa;\n                if (val < 2.2250738585072014e-308) {\n                    // denormal\n                    mantissa = val / 5e-324;\n                    writeUint(mantissa >>> 0, buf, pos + off0);\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\n                } else {\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\n                    if (exponent === 1024) exponent = 1023;\n                    mantissa = val * Math.pow(2, -exponent);\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\n                }\n            }\n        }\n\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\n\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\n            var lo = readUint(buf, pos + off0),\n                hi = readUint(buf, pos + off1);\n            var sign = (hi >> 31) * 2 + 1,\n                exponent = hi >>> 20 & 2047,\n                mantissa = 4294967296 * (hi & 1048575) + lo;\n            return exponent === 2047 ? mantissa ? NaN : sign * Infinity : exponent === 0 // denormal\n            ? sign * 5e-324 * mantissa : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\n        }\n\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\n    })();\n\n    return exports;\n}\n\n// uint helpers\n\nfunction writeUintLE(val, buf, pos) {\n    buf[pos] = val & 255;\n    buf[pos + 1] = val >>> 8 & 255;\n    buf[pos + 2] = val >>> 16 & 255;\n    buf[pos + 3] = val >>> 24;\n}\n\nfunction writeUintBE(val, buf, pos) {\n    buf[pos] = val >>> 24;\n    buf[pos + 1] = val >>> 16 & 255;\n    buf[pos + 2] = val >>> 8 & 255;\n    buf[pos + 3] = val & 255;\n}\n\nfunction readUintLE(buf, pos) {\n    return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;\n}\n\nfunction readUintBE(buf, pos) {\n    return (buf[pos] << 24 | buf[pos + 1] << 16 | buf[pos + 2] << 8 | buf[pos + 3]) >>> 0;\n}\n\n\"use strict\";\n\nvar inquire_1 = inquire;\n\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\nfunction inquire(moduleName) {\n    try {\n        var mod = undefined; // eslint-disable-line no-eval\n        if (mod && (mod.length || Object.keys(mod).length)) return mod;\n    } catch (e) {} // eslint-disable-line no-empty\n    return null;\n}\n\nvar utf8_1 = createCommonjsModule(function (module, exports) {\n    \"use strict\";\n\n    /**\r\n     * A minimal UTF8 implementation for number arrays.\r\n     * @memberof util\r\n     * @namespace\r\n     */\n\n    var utf8 = exports;\n\n    /**\r\n     * Calculates the UTF8 byte length of a string.\r\n     * @param {string} string String\r\n     * @returns {number} Byte length\r\n     */\n    utf8.length = function utf8_length(string) {\n        var len = 0,\n            c = 0;\n        for (var i = 0; i < string.length; ++i) {\n            c = string.charCodeAt(i);\n            if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n                ++i;\n                len += 4;\n            } else len += 3;\n        }\n        return len;\n    };\n\n    /**\r\n     * Reads UTF8 bytes as a string.\r\n     * @param {Uint8Array} buffer Source buffer\r\n     * @param {number} start Source start\r\n     * @param {number} end Source end\r\n     * @returns {string} String read\r\n     */\n    utf8.read = function utf8_read(buffer, start, end) {\n        var len = end - start;\n        if (len < 1) return \"\";\n        var parts = null,\n            chunk = [],\n            i = 0,\n            // char offset\n        t; // temporary\n        while (start < end) {\n            t = buffer[start++];\n            if (t < 128) chunk[i++] = t;else if (t > 191 && t < 224) chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;else if (t > 239 && t < 365) {\n                t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n                chunk[i++] = 0xD800 + (t >> 10);\n                chunk[i++] = 0xDC00 + (t & 1023);\n            } else chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n            if (i > 8191) {\n                (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n                i = 0;\n            }\n        }\n        if (parts) {\n            if (i) parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n            return parts.join(\"\");\n        }\n        return String.fromCharCode.apply(String, chunk.slice(0, i));\n    };\n\n    /**\r\n     * Writes a string as UTF8 bytes.\r\n     * @param {string} string Source string\r\n     * @param {Uint8Array} buffer Destination buffer\r\n     * @param {number} offset Destination offset\r\n     * @returns {number} Bytes written\r\n     */\n    utf8.write = function utf8_write(string, buffer, offset) {\n        var start = offset,\n            c1,\n            // character 1\n        c2; // character 2\n        for (var i = 0; i < string.length; ++i) {\n            c1 = string.charCodeAt(i);\n            if (c1 < 128) {\n                buffer[offset++] = c1;\n            } else if (c1 < 2048) {\n                buffer[offset++] = c1 >> 6 | 192;\n                buffer[offset++] = c1 & 63 | 128;\n            } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n                c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n                ++i;\n                buffer[offset++] = c1 >> 18 | 240;\n                buffer[offset++] = c1 >> 12 & 63 | 128;\n                buffer[offset++] = c1 >> 6 & 63 | 128;\n                buffer[offset++] = c1 & 63 | 128;\n            } else {\n                buffer[offset++] = c1 >> 12 | 224;\n                buffer[offset++] = c1 >> 6 & 63 | 128;\n                buffer[offset++] = c1 & 63 | 128;\n            }\n        }\n        return offset - start;\n    };\n});\n\n\"use strict\";\n\nvar pool_1 = pool;\n\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\n\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\n\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\nfunction pool(alloc, slice, size) {\n    var SIZE = size || 8192;\n    var MAX = SIZE >>> 1;\n    var slab = null;\n    var offset = SIZE;\n    return function pool_alloc(size) {\n        if (size < 1 || size > MAX) return alloc(size);\n        if (offset + size > SIZE) {\n            slab = alloc(SIZE);\n            offset = 0;\n        }\n        var buf = slice.call(slab, offset, offset += size);\n        if (offset & 7) // align to 32 bit\n            offset = (offset | 7) + 1;\n        return buf;\n    };\n}\n\n\"use strict\";\nvar longbits = LongBits$1;\n\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\nfunction LongBits$1(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\n    this.lo = lo >>> 0;\n\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\nvar zero = LongBits$1.zero = new LongBits$1(0, 0);\n\nzero.toNumber = function () {\n    return 0;\n};\nzero.zzEncode = zero.zzDecode = function () {\n    return this;\n};\nzero.length = function () {\n    return 1;\n};\n\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\nvar zeroHash = LongBits$1.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\nLongBits$1.fromNumber = function fromNumber(value) {\n    if (value === 0) return zero;\n    var sign = value < 0;\n    if (sign) value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295) hi = 0;\n        }\n    }\n    return new LongBits$1(lo, hi);\n};\n\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\nLongBits$1.from = function from(value) {\n    if (typeof value === \"number\") return LongBits$1.fromNumber(value);\n    if (minimal$2.isString(value)) {\n        /* istanbul ignore else */\n        if (minimal$2.Long) value = minimal$2.Long.fromString(value);else return LongBits$1.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits$1(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\nLongBits$1.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi >>> 0;\n        if (!lo) hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\nLongBits$1.prototype.toLong = function toLong(unsigned) {\n    return minimal$2.Long ? new minimal$2.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n    /* istanbul ignore next */\n    : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\nLongBits$1.fromHash = function fromHash(hash) {\n    if (hash === zeroHash) return zero;\n    return new LongBits$1((charCodeAt.call(hash, 0) | charCodeAt.call(hash, 1) << 8 | charCodeAt.call(hash, 2) << 16 | charCodeAt.call(hash, 3) << 24) >>> 0, (charCodeAt.call(hash, 4) | charCodeAt.call(hash, 5) << 8 | charCodeAt.call(hash, 6) << 16 | charCodeAt.call(hash, 7) << 24) >>> 0);\n};\n\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\nLongBits$1.prototype.toHash = function toHash() {\n    return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);\n};\n\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\nLongBits$1.prototype.zzEncode = function zzEncode() {\n    var mask = this.hi >> 31;\n    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo = (this.lo << 1 ^ mask) >>> 0;\n    return this;\n};\n\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\nLongBits$1.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi = (this.hi >>> 1 ^ mask) >>> 0;\n    return this;\n};\n\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\nLongBits$1.prototype.length = function length() {\n    var part0 = this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 = this.hi >>> 24;\n    return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar minimal$2 = createCommonjsModule(function (module, exports) {\n    \"use strict\";\n\n    var util = exports;\n\n    // used to return a Promise where callback is omitted\n    util.asPromise = aspromise;\n\n    // converts to / from base64 encoded strings\n    util.base64 = base64_1;\n\n    // base class of rpc.Service\n    util.EventEmitter = eventemitter;\n\n    // float handling accross browsers\n    util.float = float_1;\n\n    // requires modules optionally and hides the call from bundlers\n    util.inquire = inquire_1;\n\n    // converts to / from utf8 encoded strings\n    util.utf8 = utf8_1;\n\n    // provides a node-like buffer pool in the browser\n    util.pool = pool_1;\n\n    // utility to work with the low and high bits of a 64 bit value\n    util.LongBits = longbits;\n\n    /**\r\n     * An immuable empty array.\r\n     * @memberof util\r\n     * @type {Array.<*>}\r\n     * @const\r\n     */\n    util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */[]; // used on prototypes\n\n    /**\r\n     * An immutable empty object.\r\n     * @type {Object}\r\n     * @const\r\n     */\n    util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */{}; // used on prototypes\n\n    /**\r\n     * Whether running within node or not.\r\n     * @memberof util\r\n     * @type {boolean}\r\n     * @const\r\n     */\n    util.isNode = Boolean(commonjsGlobal.process && commonjsGlobal.process.versions && commonjsGlobal.process.versions.node);\n\n    /**\r\n     * Tests if the specified value is an integer.\r\n     * @function\r\n     * @param {*} value Value to test\r\n     * @returns {boolean} `true` if the value is an integer\r\n     */\n    util.isInteger = Number.isInteger || /* istanbul ignore next */function isInteger(value) {\n        return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    };\n\n    /**\r\n     * Tests if the specified value is a string.\r\n     * @param {*} value Value to test\r\n     * @returns {boolean} `true` if the value is a string\r\n     */\n    util.isString = function isString(value) {\n        return typeof value === \"string\" || value instanceof String;\n    };\n\n    /**\r\n     * Tests if the specified value is a non-null object.\r\n     * @param {*} value Value to test\r\n     * @returns {boolean} `true` if the value is a non-null object\r\n     */\n    util.isObject = function isObject(value) {\n        return value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === \"object\";\n    };\n\n    /**\r\n     * Checks if a property on a message is considered to be present.\r\n     * This is an alias of {@link util.isSet}.\r\n     * @function\r\n     * @param {Object} obj Plain object or message instance\r\n     * @param {string} prop Property name\r\n     * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n     */\n    util.isset =\n\n    /**\r\n     * Checks if a property on a message is considered to be present.\r\n     * @param {Object} obj Plain object or message instance\r\n     * @param {string} prop Property name\r\n     * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n     */\n    util.isSet = function isSet(obj, prop) {\n        var value = obj[prop];\n        if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n            return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n        return false;\n    };\n\n    /**\r\n     * Any compatible Buffer instance.\r\n     * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n     * @interface Buffer\r\n     * @extends Uint8Array\r\n     */\n\n    /**\r\n     * Node's Buffer class if available.\r\n     * @type {Constructor<Buffer>}\r\n     */\n    util.Buffer = function () {\n        try {\n            var Buffer = util.inquire(\"buffer\").Buffer;\n            // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n            return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */null;\n        } catch (e) {\n            /* istanbul ignore next */\n            return null;\n        }\n    }();\n\n    // Internal alias of or polyfull for Buffer.from.\n    util._Buffer_from = null;\n\n    // Internal alias of or polyfill for Buffer.allocUnsafe.\n    util._Buffer_allocUnsafe = null;\n\n    /**\r\n     * Creates a new buffer of whatever type supported by the environment.\r\n     * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n     * @returns {Uint8Array|Buffer} Buffer\r\n     */\n    util.newBuffer = function newBuffer(sizeOrArray) {\n        /* istanbul ignore next */\n        return typeof sizeOrArray === \"number\" ? util.Buffer ? util._Buffer_allocUnsafe(sizeOrArray) : new util.Array(sizeOrArray) : util.Buffer ? util._Buffer_from(sizeOrArray) : typeof Uint8Array === \"undefined\" ? sizeOrArray : new Uint8Array(sizeOrArray);\n    };\n\n    /**\r\n     * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n     * @type {Constructor<Uint8Array>}\r\n     */\n    util.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n    /**\r\n     * Any compatible Long instance.\r\n     * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n     * @interface Long\r\n     * @property {number} low Low bits\r\n     * @property {number} high High bits\r\n     * @property {boolean} unsigned Whether unsigned or not\r\n     */\n\n    /**\r\n     * Long.js's Long class if available.\r\n     * @type {Constructor<Long>}\r\n     */\n    util.Long = /* istanbul ignore next */commonjsGlobal.dcodeIO && /* istanbul ignore next */commonjsGlobal.dcodeIO.Long || util.inquire(\"long\");\n\n    /**\r\n     * Regular expression used to verify 2 bit (`bool`) map keys.\r\n     * @type {RegExp}\r\n     * @const\r\n     */\n    util.key2Re = /^true|false|0|1$/;\n\n    /**\r\n     * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n     * @type {RegExp}\r\n     * @const\r\n     */\n    util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n    /**\r\n     * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n     * @type {RegExp}\r\n     * @const\r\n     */\n    util.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n    /**\r\n     * Converts a number or long to an 8 characters long hash string.\r\n     * @param {Long|number} value Value to convert\r\n     * @returns {string} Hash\r\n     */\n    util.longToHash = function longToHash(value) {\n        return value ? util.LongBits.from(value).toHash() : util.LongBits.zeroHash;\n    };\n\n    /**\r\n     * Converts an 8 characters long hash string to a long or number.\r\n     * @param {string} hash Hash\r\n     * @param {boolean} [unsigned=false] Whether unsigned or not\r\n     * @returns {Long|number} Original value\r\n     */\n    util.longFromHash = function longFromHash(hash, unsigned) {\n        var bits = util.LongBits.fromHash(hash);\n        if (util.Long) return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n        return bits.toNumber(Boolean(unsigned));\n    };\n\n    /**\r\n     * Merges the properties of the source object into the destination object.\r\n     * @memberof util\r\n     * @param {Object.<string,*>} dst Destination object\r\n     * @param {Object.<string,*>} src Source object\r\n     * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n     * @returns {Object.<string,*>} Destination object\r\n     */\n    function merge(dst, src, ifNotSet) {\n        // used by converters\n        for (var keys = Object.keys(src), i = 0; i < keys.length; ++i) {\n            if (dst[keys[i]] === undefined || !ifNotSet) dst[keys[i]] = src[keys[i]];\n        }return dst;\n    }\n\n    util.merge = merge;\n\n    /**\r\n     * Converts the first character of a string to lower case.\r\n     * @param {string} str String to convert\r\n     * @returns {string} Converted string\r\n     */\n    util.lcFirst = function lcFirst(str) {\n        return str.charAt(0).toLowerCase() + str.substring(1);\n    };\n\n    /**\r\n     * Creates a custom error constructor.\r\n     * @memberof util\r\n     * @param {string} name Error name\r\n     * @returns {Constructor<Error>} Custom error constructor\r\n     */\n    function newError(name) {\n\n        function CustomError(message, properties) {\n\n            if (!(this instanceof CustomError)) return new CustomError(message, properties);\n\n            // Error.call(this, message);\n            // ^ just returns a new error instance because the ctor can be called as a function\n\n            Object.defineProperty(this, \"message\", { get: function get$$1() {\n                    return message;\n                } });\n\n            /* istanbul ignore next */\n            if (Error.captureStackTrace) // node\n                Error.captureStackTrace(this, CustomError);else Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n            if (properties) merge(this, properties);\n        }\n\n        (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n        Object.defineProperty(CustomError.prototype, \"name\", { get: function get$$1() {\n                return name;\n            } });\n\n        CustomError.prototype.toString = function toString() {\n            return this.name + \": \" + this.message;\n        };\n\n        return CustomError;\n    }\n\n    util.newError = newError;\n\n    /**\r\n     * Constructs a new protocol error.\r\n     * @classdesc Error subclass indicating a protocol specifc error.\r\n     * @memberof util\r\n     * @extends Error\r\n     * @template T extends Message<T>\r\n     * @constructor\r\n     * @param {string} message Error message\r\n     * @param {Object.<string,*>} [properties] Additional properties\r\n     * @example\r\n     * try {\r\n     *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n     * } catch (e) {\r\n     *     if (e instanceof ProtocolError && e.instance)\r\n     *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n     * }\r\n     */\n    util.ProtocolError = newError(\"ProtocolError\");\n\n    /**\r\n     * So far decoded message instance.\r\n     * @name util.ProtocolError#instance\r\n     * @type {Message<T>}\r\n     */\n\n    /**\r\n     * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n     * @typedef OneOfGetter\r\n     * @type {function}\r\n     * @returns {string|undefined} Set field name, if any\r\n     */\n\n    /**\r\n     * Builds a getter for a oneof's present field name.\r\n     * @param {string[]} fieldNames Field names\r\n     * @returns {OneOfGetter} Unbound getter\r\n     */\n    util.oneOfGetter = function getOneOf(fieldNames) {\n        var fieldMap = {};\n        for (var i = 0; i < fieldNames.length; ++i) {\n            fieldMap[fieldNames[i]] = 1;\n        } /**\r\n           * @returns {string|undefined} Set field name, if any\r\n           * @this Object\r\n           * @ignore\r\n           */\n        return function () {\n            // eslint-disable-line consistent-return\n            for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i) {\n                if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null) return keys[i];\n            }\n        };\n    };\n\n    /**\r\n     * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n     * @typedef OneOfSetter\r\n     * @type {function}\r\n     * @param {string|undefined} value Field name\r\n     * @returns {undefined}\r\n     */\n\n    /**\r\n     * Builds a setter for a oneof's present field name.\r\n     * @param {string[]} fieldNames Field names\r\n     * @returns {OneOfSetter} Unbound setter\r\n     */\n    util.oneOfSetter = function setOneOf(fieldNames) {\n\n        /**\r\n         * @param {string} name Field name\r\n         * @returns {undefined}\r\n         * @this Object\r\n         * @ignore\r\n         */\n        return function (name) {\n            for (var i = 0; i < fieldNames.length; ++i) {\n                if (fieldNames[i] !== name) delete this[fieldNames[i]];\n            }\n        };\n    };\n\n    /**\r\n     * Default conversion options used for {@link Message#toJSON} implementations.\r\n     *\r\n     * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n     *\r\n     * - Longs become strings\r\n     * - Enums become string keys\r\n     * - Bytes become base64 encoded strings\r\n     * - (Sub-)Messages become plain objects\r\n     * - Maps become plain objects with all string keys\r\n     * - Repeated fields become arrays\r\n     * - NaN and Infinity for float and double fields become strings\r\n     *\r\n     * @type {IConversionOptions}\r\n     * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n     */\n    util.toJSONOptions = {\n        longs: String,\n        enums: String,\n        bytes: String,\n        json: true\n    };\n\n    util._configure = function () {\n        var Buffer = util.Buffer;\n        /* istanbul ignore if */\n        if (!Buffer) {\n            util._Buffer_from = util._Buffer_allocUnsafe = null;\n            return;\n        }\n        // because node 4.x buffers are incompatible & immutable\n        // see: https://github.com/dcodeIO/protobuf.js/pull/665\n        util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n        util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n    };\n});\n\n\"use strict\";\nvar writer = Writer;\n\nvar BufferWriter; // cyclic\n\nvar LongBits = minimal$2.LongBits;\nvar base64 = minimal$2.base64;\nvar utf8 = minimal$2.utf8;\n\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\nfunction Op(fn, len, val) {\n\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\n    this.fn = fn;\n\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\n    this.len = len;\n\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\n    this.next = undefined;\n\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\nfunction State(writer) {\n\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\n    this.head = writer.head;\n\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\n    this.tail = writer.tail;\n\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\n    this.len = writer.len;\n\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\n    this.next = writer.states;\n}\n\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\nfunction Writer() {\n\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\n    this.len = 0;\n\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\n    this.tail = this.head;\n\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\nWriter.create = minimal$2.Buffer ? function create_buffer_setup() {\n    return (Writer.create = function create_buffer() {\n        return new BufferWriter();\n    })();\n}\n/* istanbul ignore next */\n: function create_array() {\n    return new Writer();\n};\n\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\nWriter.alloc = function alloc(size) {\n    return new minimal$2.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (minimal$2.Array !== Array) Writer.alloc = minimal$2.pool(Writer.alloc, minimal$2.Array.prototype.subarray);\n\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;\n    return this;\n};\n\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0 ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n    : this.uint32(value);\n};\n\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos] = val & 255;\n    buf[pos + 1] = val >>> 8 & 255;\n    buf[pos + 2] = val >>> 16 & 255;\n    buf[pos + 3] = val >>> 24;\n}\n\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(minimal$2.float.writeFloatLE, 4, value);\n};\n\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(minimal$2.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = minimal$2.Array.prototype.set ? function writeBytes_set(val, buf, pos) {\n    buf.set(val, pos); // also works for plain array values\n}\n/* istanbul ignore next */\n: function writeBytes_for(val, buf, pos) {\n    for (var i = 0; i < val.length; ++i) {\n        buf[pos + i] = val[i];\n    }\n};\n\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len) return this._push(writeByte, 1, 0);\n    if (minimal$2.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len ? this.uint32(len)._push(utf8.write, len, value) : this._push(writeByte, 1, 0);\n};\n\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head = this.states.head;\n        this.tail = this.states.tail;\n        this.len = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len = 0;\n    }\n    return this;\n};\n\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next,\n        // skip noop\n    buf = this.constructor.alloc(this.len),\n        pos = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function (BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n\n\"use strict\";\nvar writer_buffer = BufferWriter$1;\n\n// extends Writer\n\n(BufferWriter$1.prototype = Object.create(writer.prototype)).constructor = BufferWriter$1;\n\nvar Buffer = minimal$2.Buffer;\n\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\nfunction BufferWriter$1() {\n    writer.call(this);\n}\n\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\nBufferWriter$1.alloc = function alloc_buffer(size) {\n    return (BufferWriter$1.alloc = minimal$2._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\" ? function writeBytesBuffer_set(val, buf, pos) {\n    buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n    // also works for plain array values\n}\n/* istanbul ignore next */\n: function writeBytesBuffer_copy(val, buf, pos) {\n    if (val.copy) // Buffer values\n        val.copy(buf, pos, 0, val.length);else for (var i = 0; i < val.length;) {\n        // plain array values\n        buf[pos++] = val[i++];\n    }\n};\n\n/**\r\n * @override\r\n */\nBufferWriter$1.prototype.bytes = function write_bytes_buffer(value) {\n    if (minimal$2.isString(value)) value = minimal$2._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len) this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        minimal$2.utf8.write(val, buf, pos);else buf.utf8Write(val, pos);\n}\n\n/**\r\n * @override\r\n */\nBufferWriter$1.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len) this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\n\n\"use strict\";\nvar reader = Reader;\n\nvar BufferReader; // cyclic\n\nvar LongBits$2 = minimal$2.LongBits;\nvar utf8$1 = minimal$2.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\nfunction Reader(buffer) {\n\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\n    this.buf = buffer;\n\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\n    this.pos = 0;\n\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\" ? function create_typed_array(buffer) {\n    if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader(buffer);\n    throw Error(\"illegal buffer\");\n}\n/* istanbul ignore next */\n: function create_array(buffer) {\n    if (Array.isArray(buffer)) return new Reader(buffer);\n    throw Error(\"illegal buffer\");\n};\n\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\nReader.create = minimal$2.Buffer ? function create_buffer_setup(buffer) {\n    return (Reader.create = function create_buffer(buffer) {\n        return minimal$2.Buffer.isBuffer(buffer) ? new BufferReader(buffer)\n        /* istanbul ignore next */\n        : create_array(buffer);\n    })(buffer);\n}\n/* istanbul ignore next */\n: create_array;\n\nReader.prototype._slice = minimal$2.Array.prototype.subarray || /* istanbul ignore next */minimal$2.Array.prototype.slice;\n\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.uint32 = function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (this.buf[this.pos] & 127) >>> 0;if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n}();\n\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits$2(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) {\n        // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128) return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n        if (this.buf[this.pos++] < 128) return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len) throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128) return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) {\n        // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128) return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len) throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128) return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) {\n    // note that this uses `end`, not `pos`\n    return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;\n}\n\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64() /* this: Reader */{\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);\n\n    return new LongBits$2(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\n\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n\n    var value = minimal$2.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);\n\n    var value = minimal$2.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start = this.pos,\n        end = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len) throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n    ? new this.buf.constructor(0) : this._slice.call(this.buf, start, end);\n};\n\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8$1.read(bytes, 0, bytes.length);\n};\n\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len) throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\nReader.prototype.skipType = function (wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            do {\n                // eslint-disable-line no-constant-condition\n                if ((wireType = this.uint32() & 7) === 4) break;\n                this.skipType(wireType);\n            } while (true);\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function (BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = minimal$2.Long ? \"toLong\" : /* istanbul ignore next */\"toNumber\";\n    minimal$2.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n\n\"use strict\";\nvar reader_buffer = BufferReader$1;\n\n// extends Reader\n\n(BufferReader$1.prototype = Object.create(reader.prototype)).constructor = BufferReader$1;\n\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\nfunction BufferReader$1(buffer) {\n  reader.call(this, buffer);\n\n  /**\r\n   * Read buffer.\r\n   * @name BufferReader#buf\r\n   * @type {Buffer}\r\n   */\n}\n\n/* istanbul ignore else */\nif (minimal$2.Buffer) BufferReader$1.prototype._slice = minimal$2.Buffer.prototype.slice;\n\n/**\r\n * @override\r\n */\nBufferReader$1.prototype.string = function read_string_buffer() {\n  var len = this.uint32(); // modifies pos\n  return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\n\n\"use strict\";\nvar service$1 = Service;\n\n// Extends EventEmitter\n(Service.prototype = Object.create(minimal$2.EventEmitter.prototype)).constructor = Service;\n\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\n\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\n\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\") throw TypeError(\"rpcImpl must be a function\");\n\n    minimal$2.EventEmitter.call(this);\n\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request) throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback) return minimal$2.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function () {\n            callback(Error(\"already ended\"));\n        }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(method, requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(), function rpcCallback(err, response) {\n\n            if (err) {\n                self.emit(\"error\", err, method);\n                return callback(err);\n            }\n\n            if (response === null) {\n                self.end( /* endedByRPC */true);\n                return undefined;\n            }\n\n            if (!(response instanceof responseCtor)) {\n                try {\n                    response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                } catch (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n            }\n\n            self.emit(\"data\", response, method);\n            return callback(null, response);\n        });\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function () {\n            callback(err);\n        }, 0);\n        return undefined;\n    }\n};\n\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n\nvar rpc_1 = createCommonjsModule(function (module, exports) {\n  \"use strict\";\n\n  /**\r\n   * Streaming RPC helpers.\r\n   * @namespace\r\n   */\n\n  var rpc = exports;\n\n  /**\r\n   * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n   * @typedef RPCImpl\r\n   * @type {function}\r\n   * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n   * @param {Uint8Array} requestData Request data\r\n   * @param {RPCImplCallback} callback Callback function\r\n   * @returns {undefined}\r\n   * @example\r\n   * function rpcImpl(method, requestData, callback) {\r\n   *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n   *         throw Error(\"no such method\");\r\n   *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n   *         callback(err, responseData);\r\n   *     });\r\n   * }\r\n   */\n\n  /**\r\n   * Node-style callback as used by {@link RPCImpl}.\r\n   * @typedef RPCImplCallback\r\n   * @type {function}\r\n   * @param {Error|null} error Error, if any, otherwise `null`\r\n   * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n   * @returns {undefined}\r\n   */\n\n  rpc.Service = service$1;\n});\n\n\"use strict\";\n\nvar roots = {};\n\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\n\nvar indexMinimal = createCommonjsModule(function (module, exports) {\n  \"use strict\";\n\n  var protobuf = exports;\n\n  /**\r\n   * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n   * @name build\r\n   * @type {string}\r\n   * @const\r\n   */\n  protobuf.build = \"minimal\";\n\n  // Serialization\n  protobuf.Writer = writer;\n  protobuf.BufferWriter = writer_buffer;\n  protobuf.Reader = reader;\n  protobuf.BufferReader = reader_buffer;\n\n  // Utility\n  protobuf.util = minimal$2;\n  protobuf.rpc = rpc_1;\n  protobuf.roots = roots;\n  protobuf.configure = configure;\n\n  /* istanbul ignore next */\n  /**\r\n   * Reconfigures the library according to the environment.\r\n   * @returns {undefined}\r\n   */\n  function configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n  }\n\n  // Configure serialization\n  protobuf.Writer._configure(protobuf.BufferWriter);\n  configure();\n});\n\n// minimal library entry point.\n\n\"use strict\";\nvar minimal = indexMinimal;\n\nvar minimal_1 = minimal.Reader;\nvar minimal_2 = minimal.Writer;\nvar minimal_3 = minimal.util;\nvar minimal_4 = minimal.roots;\n\n/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n// Common aliases\nvar $Reader = minimal_1;\nvar $Writer = minimal_2;\nvar $util = minimal_3;\n\n// Exported root namespace\nvar $root = minimal_4[\"default\"] || (minimal_4[\"default\"] = {});\n\nvar Message = $root.Message = function () {\n\n    /**\n     * Properties of a Message.\n     * @exports IMessage\n     * @interface IMessage\n     * @property {number} [senderId] Message senderId\n     * @property {number} [recipientId] Message recipientId\n     * @property {boolean} [isService] Message isService\n     * @property {Uint8Array} [content] Message content\n     */\n\n    /**\n     * Constructs a new Message.\n     * @exports Message\n     * @classdesc Represents a Message.\n     * @constructor\n     * @param {IMessage=} [properties] Properties to set\n     */\n    function Message(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n    }\n\n    /**\n     * Message senderId.\n     * @member {number}senderId\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.senderId = 0;\n\n    /**\n     * Message recipientId.\n     * @member {number}recipientId\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.recipientId = 0;\n\n    /**\n     * Message isService.\n     * @member {boolean}isService\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.isService = false;\n\n    /**\n     * Message content.\n     * @member {Uint8Array}content\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.content = $util.newBuffer([]);\n\n    /**\n     * Creates a new Message instance using the specified properties.\n     * @function create\n     * @memberof Message\n     * @static\n     * @param {IMessage=} [properties] Properties to set\n     * @returns {Message} Message instance\n     */\n    Message.create = function create(properties) {\n        return new Message(properties);\n    };\n\n    /**\n     * Encodes the specified Message message. Does not implicitly {@link Message.verify|verify} messages.\n     * @function encode\n     * @memberof Message\n     * @static\n     * @param {IMessage} message Message message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Message.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.senderId != null && message.hasOwnProperty(\"senderId\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.senderId);\n        if (message.recipientId != null && message.hasOwnProperty(\"recipientId\")) writer.uint32( /* id 2, wireType 0 =*/16).uint32(message.recipientId);\n        if (message.isService != null && message.hasOwnProperty(\"isService\")) writer.uint32( /* id 3, wireType 0 =*/24).bool(message.isService);\n        if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32( /* id 4, wireType 2 =*/34).bytes(message.content);\n        return writer;\n    };\n\n    /**\n     * Decodes a Message message from the specified reader or buffer.\n     * @function decode\n     * @memberof Message\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Message} Message\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Message.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.Message();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.senderId = reader.uint32();\n                    break;\n                case 2:\n                    message.recipientId = reader.uint32();\n                    break;\n                case 3:\n                    message.isService = reader.bool();\n                    break;\n                case 4:\n                    message.content = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    };\n\n    return Message;\n}();\n\nvar user = $root.user = function () {\n\n    /**\n     * Namespace user.\n     * @exports user\n     * @namespace\n     */\n    var user = {};\n\n    user.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof user\n         * @interface IMessage\n         * @property {number} [length] Message length\n         * @property {user.Message.Type} [type] Message type\n         * @property {Uint8Array} [full] Message full\n         * @property {user.Message.IChunk} [chunk] Message chunk\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof user\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {user.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message length.\n         * @member {number}length\n         * @memberof user.Message\n         * @instance\n         */\n        Message.prototype.length = 0;\n\n        /**\n         * Message type.\n         * @member {user.Message.Type}type\n         * @memberof user.Message\n         * @instance\n         */\n        Message.prototype.type = 0;\n\n        /**\n         * Message full.\n         * @member {Uint8Array}full\n         * @memberof user.Message\n         * @instance\n         */\n        Message.prototype.full = $util.newBuffer([]);\n\n        /**\n         * Message chunk.\n         * @member {(user.Message.IChunk|null|undefined)}chunk\n         * @memberof user.Message\n         * @instance\n         */\n        Message.prototype.chunk = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message content.\n         * @member {string|undefined} content\n         * @memberof user.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"content\", {\n            get: $util.oneOfGetter($oneOfFields = [\"full\", \"chunk\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof user.Message\n         * @static\n         * @param {user.IMessage=} [properties] Properties to set\n         * @returns {user.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link user.Message.verify|verify} messages.\n         * @function encode\n         * @memberof user.Message\n         * @static\n         * @param {user.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.length != null && message.hasOwnProperty(\"length\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.length);\n            if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32( /* id 2, wireType 0 =*/16).int32(message.type);\n            if (message.full != null && message.hasOwnProperty(\"full\")) writer.uint32( /* id 3, wireType 2 =*/26).bytes(message.full);\n            if (message.chunk != null && message.hasOwnProperty(\"chunk\")) $root.user.Message.Chunk.encode(message.chunk, writer.uint32( /* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof user.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {user.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.user.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.length = reader.uint32();\n                        break;\n                    case 2:\n                        message.type = reader.int32();\n                        break;\n                    case 3:\n                        message.full = reader.bytes();\n                        break;\n                    case 4:\n                        message.chunk = $root.user.Message.Chunk.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        Message.Chunk = function () {\n\n            /**\n             * Properties of a Chunk.\n             * @memberof user.Message\n             * @interface IChunk\n             * @property {number} [id] Chunk id\n             * @property {number} [number] Chunk number\n             * @property {Uint8Array} [content] Chunk content\n             */\n\n            /**\n             * Constructs a new Chunk.\n             * @memberof user.Message\n             * @classdesc Represents a Chunk.\n             * @constructor\n             * @param {user.Message.IChunk=} [properties] Properties to set\n             */\n            function Chunk(properties) {\n                if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                    if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n                }\n            }\n\n            /**\n             * Chunk id.\n             * @member {number}id\n             * @memberof user.Message.Chunk\n             * @instance\n             */\n            Chunk.prototype.id = 0;\n\n            /**\n             * Chunk number.\n             * @member {number}number\n             * @memberof user.Message.Chunk\n             * @instance\n             */\n            Chunk.prototype.number = 0;\n\n            /**\n             * Chunk content.\n             * @member {Uint8Array}content\n             * @memberof user.Message.Chunk\n             * @instance\n             */\n            Chunk.prototype.content = $util.newBuffer([]);\n\n            /**\n             * Creates a new Chunk instance using the specified properties.\n             * @function create\n             * @memberof user.Message.Chunk\n             * @static\n             * @param {user.Message.IChunk=} [properties] Properties to set\n             * @returns {user.Message.Chunk} Chunk instance\n             */\n            Chunk.create = function create(properties) {\n                return new Chunk(properties);\n            };\n\n            /**\n             * Encodes the specified Chunk message. Does not implicitly {@link user.Message.Chunk.verify|verify} messages.\n             * @function encode\n             * @memberof user.Message.Chunk\n             * @static\n             * @param {user.Message.IChunk} message Chunk message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Chunk.encode = function encode(message, writer) {\n                if (!writer) writer = $Writer.create();\n                if (message.id != null && message.hasOwnProperty(\"id\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.id);\n                if (message.number != null && message.hasOwnProperty(\"number\")) writer.uint32( /* id 2, wireType 0 =*/16).uint32(message.number);\n                if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32( /* id 4, wireType 2 =*/34).bytes(message.content);\n                return writer;\n            };\n\n            /**\n             * Decodes a Chunk message from the specified reader or buffer.\n             * @function decode\n             * @memberof user.Message.Chunk\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {user.Message.Chunk} Chunk\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Chunk.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length,\n                    message = new $root.user.Message.Chunk();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            message.id = reader.uint32();\n                            break;\n                        case 2:\n                            message.number = reader.uint32();\n                            break;\n                        case 4:\n                            message.content = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return message;\n            };\n\n            return Chunk;\n        }();\n\n        /**\n         * Type enum.\n         * @enum {string}\n         * @property {number} STRING=0 STRING value\n         * @property {number} U_INT_8_ARRAY=1 U_INT_8_ARRAY value\n         */\n        Message.Type = function () {\n            var valuesById = {},\n                values = Object.create(valuesById);\n            values[valuesById[0] = \"STRING\"] = 0;\n            values[valuesById[1] = \"U_INT_8_ARRAY\"] = 1;\n            return values;\n        }();\n\n        return Message;\n    }();\n\n    return user;\n}();\n\nvar service = $root.service = function () {\n\n    /**\n     * Namespace service.\n     * @exports service\n     * @namespace\n     */\n    var service = {};\n\n    service.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof service\n         * @interface IMessage\n         * @property {number} [id] Message id\n         * @property {Uint8Array} [content] Message content\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof service\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {service.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message id.\n         * @member {number}id\n         * @memberof service.Message\n         * @instance\n         */\n        Message.prototype.id = 0;\n\n        /**\n         * Message content.\n         * @member {Uint8Array}content\n         * @memberof service.Message\n         * @instance\n         */\n        Message.prototype.content = $util.newBuffer([]);\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof service.Message\n         * @static\n         * @param {service.IMessage=} [properties] Properties to set\n         * @returns {service.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link service.Message.verify|verify} messages.\n         * @function encode\n         * @memberof service.Message\n         * @static\n         * @param {service.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.id != null && message.hasOwnProperty(\"id\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.id);\n            if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32( /* id 2, wireType 2 =*/18).bytes(message.content);\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof service.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {service.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.service.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.uint32();\n                        break;\n                    case 2:\n                        message.content = reader.bytes();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    return service;\n}();\n\nvar webChannel = $root.webChannel = function () {\n\n    /**\n     * Namespace webChannel.\n     * @exports webChannel\n     * @namespace\n     */\n    var webChannel = {};\n\n    webChannel.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof webChannel\n         * @interface IMessage\n         * @property {webChannel.IInitData} [init] Message init\n         * @property {webChannel.IPeers} [initOk] Message initOk\n         * @property {boolean} [ping] Message ping\n         * @property {boolean} [pong] Message pong\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof webChannel\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {webChannel.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message init.\n         * @member {(webChannel.IInitData|null|undefined)}init\n         * @memberof webChannel.Message\n         * @instance\n         */\n        Message.prototype.init = null;\n\n        /**\n         * Message initOk.\n         * @member {(webChannel.IPeers|null|undefined)}initOk\n         * @memberof webChannel.Message\n         * @instance\n         */\n        Message.prototype.initOk = null;\n\n        /**\n         * Message ping.\n         * @member {boolean}ping\n         * @memberof webChannel.Message\n         * @instance\n         */\n        Message.prototype.ping = false;\n\n        /**\n         * Message pong.\n         * @member {boolean}pong\n         * @memberof webChannel.Message\n         * @instance\n         */\n        Message.prototype.pong = false;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message type.\n         * @member {string|undefined} type\n         * @memberof webChannel.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"init\", \"initOk\", \"ping\", \"pong\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof webChannel.Message\n         * @static\n         * @param {webChannel.IMessage=} [properties] Properties to set\n         * @returns {webChannel.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link webChannel.Message.verify|verify} messages.\n         * @function encode\n         * @memberof webChannel.Message\n         * @static\n         * @param {webChannel.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.init != null && message.hasOwnProperty(\"init\")) $root.webChannel.InitData.encode(message.init, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.initOk != null && message.hasOwnProperty(\"initOk\")) $root.webChannel.Peers.encode(message.initOk, writer.uint32( /* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.ping != null && message.hasOwnProperty(\"ping\")) writer.uint32( /* id 3, wireType 0 =*/24).bool(message.ping);\n            if (message.pong != null && message.hasOwnProperty(\"pong\")) writer.uint32( /* id 4, wireType 0 =*/32).bool(message.pong);\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof webChannel.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {webChannel.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.webChannel.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.init = $root.webChannel.InitData.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.initOk = $root.webChannel.Peers.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.ping = reader.bool();\n                        break;\n                    case 4:\n                        message.pong = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    webChannel.InitData = function () {\n\n        /**\n         * Properties of an InitData.\n         * @memberof webChannel\n         * @interface IInitData\n         * @property {number} [topology] InitData topology\n         * @property {number} [wcId] InitData wcId\n         * @property {Array.<number>} [generatedIds] InitData generatedIds\n         */\n\n        /**\n         * Constructs a new InitData.\n         * @memberof webChannel\n         * @classdesc Represents an InitData.\n         * @constructor\n         * @param {webChannel.IInitData=} [properties] Properties to set\n         */\n        function InitData(properties) {\n            this.generatedIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * InitData topology.\n         * @member {number}topology\n         * @memberof webChannel.InitData\n         * @instance\n         */\n        InitData.prototype.topology = 0;\n\n        /**\n         * InitData wcId.\n         * @member {number}wcId\n         * @memberof webChannel.InitData\n         * @instance\n         */\n        InitData.prototype.wcId = 0;\n\n        /**\n         * InitData generatedIds.\n         * @member {Array.<number>}generatedIds\n         * @memberof webChannel.InitData\n         * @instance\n         */\n        InitData.prototype.generatedIds = $util.emptyArray;\n\n        /**\n         * Creates a new InitData instance using the specified properties.\n         * @function create\n         * @memberof webChannel.InitData\n         * @static\n         * @param {webChannel.IInitData=} [properties] Properties to set\n         * @returns {webChannel.InitData} InitData instance\n         */\n        InitData.create = function create(properties) {\n            return new InitData(properties);\n        };\n\n        /**\n         * Encodes the specified InitData message. Does not implicitly {@link webChannel.InitData.verify|verify} messages.\n         * @function encode\n         * @memberof webChannel.InitData\n         * @static\n         * @param {webChannel.IInitData} message InitData message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        InitData.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.topology != null && message.hasOwnProperty(\"topology\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.topology);\n            if (message.wcId != null && message.hasOwnProperty(\"wcId\")) writer.uint32( /* id 2, wireType 0 =*/16).uint32(message.wcId);\n            if (message.generatedIds != null && message.generatedIds.length) {\n                writer.uint32( /* id 3, wireType 2 =*/26).fork();\n                for (var i = 0; i < message.generatedIds.length; ++i) {\n                    writer.uint32(message.generatedIds[i]);\n                }writer.ldelim();\n            }\n            return writer;\n        };\n\n        /**\n         * Decodes an InitData message from the specified reader or buffer.\n         * @function decode\n         * @memberof webChannel.InitData\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {webChannel.InitData} InitData\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        InitData.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.webChannel.InitData();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.topology = reader.uint32();\n                        break;\n                    case 2:\n                        message.wcId = reader.uint32();\n                        break;\n                    case 3:\n                        if (!(message.generatedIds && message.generatedIds.length)) message.generatedIds = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2) {\n                                message.generatedIds.push(reader.uint32());\n                            }\n                        } else message.generatedIds.push(reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return InitData;\n    }();\n\n    webChannel.Peers = function () {\n\n        /**\n         * Properties of a Peers.\n         * @memberof webChannel\n         * @interface IPeers\n         * @property {Array.<number>} [members] Peers members\n         */\n\n        /**\n         * Constructs a new Peers.\n         * @memberof webChannel\n         * @classdesc Represents a Peers.\n         * @constructor\n         * @param {webChannel.IPeers=} [properties] Properties to set\n         */\n        function Peers(properties) {\n            this.members = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Peers members.\n         * @member {Array.<number>}members\n         * @memberof webChannel.Peers\n         * @instance\n         */\n        Peers.prototype.members = $util.emptyArray;\n\n        /**\n         * Creates a new Peers instance using the specified properties.\n         * @function create\n         * @memberof webChannel.Peers\n         * @static\n         * @param {webChannel.IPeers=} [properties] Properties to set\n         * @returns {webChannel.Peers} Peers instance\n         */\n        Peers.create = function create(properties) {\n            return new Peers(properties);\n        };\n\n        /**\n         * Encodes the specified Peers message. Does not implicitly {@link webChannel.Peers.verify|verify} messages.\n         * @function encode\n         * @memberof webChannel.Peers\n         * @static\n         * @param {webChannel.IPeers} message Peers message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Peers.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.members != null && message.members.length) {\n                writer.uint32( /* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.members.length; ++i) {\n                    writer.uint32(message.members[i]);\n                }writer.ldelim();\n            }\n            return writer;\n        };\n\n        /**\n         * Decodes a Peers message from the specified reader or buffer.\n         * @function decode\n         * @memberof webChannel.Peers\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {webChannel.Peers} Peers\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Peers.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.webChannel.Peers();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.members && message.members.length)) message.members = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2) {\n                                message.members.push(reader.uint32());\n                            }\n                        } else message.members.push(reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Peers;\n    }();\n\n    return webChannel;\n}();\n\nvar channelBuilder = $root.channelBuilder = function () {\n\n    /**\n     * Namespace channelBuilder.\n     * @exports channelBuilder\n     * @namespace\n     */\n    var channelBuilder = {};\n\n    channelBuilder.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof channelBuilder\n         * @interface IMessage\n         * @property {channelBuilder.IConnection} [request] Message request\n         * @property {channelBuilder.IConnection} [response] Message response\n         * @property {string} [failed] Message failed\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof channelBuilder\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {channelBuilder.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message request.\n         * @member {(channelBuilder.IConnection|null|undefined)}request\n         * @memberof channelBuilder.Message\n         * @instance\n         */\n        Message.prototype.request = null;\n\n        /**\n         * Message response.\n         * @member {(channelBuilder.IConnection|null|undefined)}response\n         * @memberof channelBuilder.Message\n         * @instance\n         */\n        Message.prototype.response = null;\n\n        /**\n         * Message failed.\n         * @member {string}failed\n         * @memberof channelBuilder.Message\n         * @instance\n         */\n        Message.prototype.failed = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message type.\n         * @member {string|undefined} type\n         * @memberof channelBuilder.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"request\", \"response\", \"failed\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof channelBuilder.Message\n         * @static\n         * @param {channelBuilder.IMessage=} [properties] Properties to set\n         * @returns {channelBuilder.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link channelBuilder.Message.verify|verify} messages.\n         * @function encode\n         * @memberof channelBuilder.Message\n         * @static\n         * @param {channelBuilder.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.request != null && message.hasOwnProperty(\"request\")) $root.channelBuilder.Connection.encode(message.request, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.response != null && message.hasOwnProperty(\"response\")) $root.channelBuilder.Connection.encode(message.response, writer.uint32( /* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.failed != null && message.hasOwnProperty(\"failed\")) writer.uint32( /* id 3, wireType 2 =*/26).string(message.failed);\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof channelBuilder.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {channelBuilder.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.channelBuilder.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.request = $root.channelBuilder.Connection.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.response = $root.channelBuilder.Connection.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.failed = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    channelBuilder.Connection = function () {\n\n        /**\n         * Properties of a Connection.\n         * @memberof channelBuilder\n         * @interface IConnection\n         * @property {string} [wsUrl] Connection wsUrl\n         * @property {boolean} [isWrtcSupport] Connection isWrtcSupport\n         */\n\n        /**\n         * Constructs a new Connection.\n         * @memberof channelBuilder\n         * @classdesc Represents a Connection.\n         * @constructor\n         * @param {channelBuilder.IConnection=} [properties] Properties to set\n         */\n        function Connection(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Connection wsUrl.\n         * @member {string}wsUrl\n         * @memberof channelBuilder.Connection\n         * @instance\n         */\n        Connection.prototype.wsUrl = \"\";\n\n        /**\n         * Connection isWrtcSupport.\n         * @member {boolean}isWrtcSupport\n         * @memberof channelBuilder.Connection\n         * @instance\n         */\n        Connection.prototype.isWrtcSupport = false;\n\n        /**\n         * Creates a new Connection instance using the specified properties.\n         * @function create\n         * @memberof channelBuilder.Connection\n         * @static\n         * @param {channelBuilder.IConnection=} [properties] Properties to set\n         * @returns {channelBuilder.Connection} Connection instance\n         */\n        Connection.create = function create(properties) {\n            return new Connection(properties);\n        };\n\n        /**\n         * Encodes the specified Connection message. Does not implicitly {@link channelBuilder.Connection.verify|verify} messages.\n         * @function encode\n         * @memberof channelBuilder.Connection\n         * @static\n         * @param {channelBuilder.IConnection} message Connection message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Connection.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.wsUrl != null && message.hasOwnProperty(\"wsUrl\")) writer.uint32( /* id 1, wireType 2 =*/10).string(message.wsUrl);\n            if (message.isWrtcSupport != null && message.hasOwnProperty(\"isWrtcSupport\")) writer.uint32( /* id 2, wireType 0 =*/16).bool(message.isWrtcSupport);\n            return writer;\n        };\n\n        /**\n         * Decodes a Connection message from the specified reader or buffer.\n         * @function decode\n         * @memberof channelBuilder.Connection\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {channelBuilder.Connection} Connection\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Connection.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.channelBuilder.Connection();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.wsUrl = reader.string();\n                        break;\n                    case 2:\n                        message.isWrtcSupport = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Connection;\n    }();\n\n    return channelBuilder;\n}();\n\nvar fullMesh = $root.fullMesh = function () {\n\n    /**\n     * Namespace fullMesh.\n     * @exports fullMesh\n     * @namespace\n     */\n    var fullMesh = {};\n\n    fullMesh.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof fullMesh\n         * @interface IMessage\n         * @property {fullMesh.IPeers} [connectTo] Message connectTo\n         * @property {fullMesh.IPeers} [connectedTo] Message connectedTo\n         * @property {number} [joiningPeerId] Message joiningPeerId\n         * @property {boolean} [joinSucceed] Message joinSucceed\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof fullMesh\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {fullMesh.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message connectTo.\n         * @member {(fullMesh.IPeers|null|undefined)}connectTo\n         * @memberof fullMesh.Message\n         * @instance\n         */\n        Message.prototype.connectTo = null;\n\n        /**\n         * Message connectedTo.\n         * @member {(fullMesh.IPeers|null|undefined)}connectedTo\n         * @memberof fullMesh.Message\n         * @instance\n         */\n        Message.prototype.connectedTo = null;\n\n        /**\n         * Message joiningPeerId.\n         * @member {number}joiningPeerId\n         * @memberof fullMesh.Message\n         * @instance\n         */\n        Message.prototype.joiningPeerId = 0;\n\n        /**\n         * Message joinSucceed.\n         * @member {boolean}joinSucceed\n         * @memberof fullMesh.Message\n         * @instance\n         */\n        Message.prototype.joinSucceed = false;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message type.\n         * @member {string|undefined} type\n         * @memberof fullMesh.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"connectTo\", \"connectedTo\", \"joiningPeerId\", \"joinSucceed\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof fullMesh.Message\n         * @static\n         * @param {fullMesh.IMessage=} [properties] Properties to set\n         * @returns {fullMesh.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link fullMesh.Message.verify|verify} messages.\n         * @function encode\n         * @memberof fullMesh.Message\n         * @static\n         * @param {fullMesh.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.connectTo != null && message.hasOwnProperty(\"connectTo\")) $root.fullMesh.Peers.encode(message.connectTo, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.connectedTo != null && message.hasOwnProperty(\"connectedTo\")) $root.fullMesh.Peers.encode(message.connectedTo, writer.uint32( /* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.joiningPeerId != null && message.hasOwnProperty(\"joiningPeerId\")) writer.uint32( /* id 3, wireType 0 =*/24).uint32(message.joiningPeerId);\n            if (message.joinSucceed != null && message.hasOwnProperty(\"joinSucceed\")) writer.uint32( /* id 4, wireType 0 =*/32).bool(message.joinSucceed);\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof fullMesh.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {fullMesh.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.fullMesh.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.connectTo = $root.fullMesh.Peers.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.connectedTo = $root.fullMesh.Peers.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.joiningPeerId = reader.uint32();\n                        break;\n                    case 4:\n                        message.joinSucceed = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    fullMesh.Peers = function () {\n\n        /**\n         * Properties of a Peers.\n         * @memberof fullMesh\n         * @interface IPeers\n         * @property {Array.<number>} [members] Peers members\n         */\n\n        /**\n         * Constructs a new Peers.\n         * @memberof fullMesh\n         * @classdesc Represents a Peers.\n         * @constructor\n         * @param {fullMesh.IPeers=} [properties] Properties to set\n         */\n        function Peers(properties) {\n            this.members = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Peers members.\n         * @member {Array.<number>}members\n         * @memberof fullMesh.Peers\n         * @instance\n         */\n        Peers.prototype.members = $util.emptyArray;\n\n        /**\n         * Creates a new Peers instance using the specified properties.\n         * @function create\n         * @memberof fullMesh.Peers\n         * @static\n         * @param {fullMesh.IPeers=} [properties] Properties to set\n         * @returns {fullMesh.Peers} Peers instance\n         */\n        Peers.create = function create(properties) {\n            return new Peers(properties);\n        };\n\n        /**\n         * Encodes the specified Peers message. Does not implicitly {@link fullMesh.Peers.verify|verify} messages.\n         * @function encode\n         * @memberof fullMesh.Peers\n         * @static\n         * @param {fullMesh.IPeers} message Peers message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Peers.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.members != null && message.members.length) {\n                writer.uint32( /* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.members.length; ++i) {\n                    writer.uint32(message.members[i]);\n                }writer.ldelim();\n            }\n            return writer;\n        };\n\n        /**\n         * Decodes a Peers message from the specified reader or buffer.\n         * @function decode\n         * @memberof fullMesh.Peers\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {fullMesh.Peers} Peers\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Peers.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.fullMesh.Peers();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.members && message.members.length)) message.members = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2) {\n                                message.members.push(reader.uint32());\n                            }\n                        } else message.members.push(reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Peers;\n    }();\n\n    return fullMesh;\n}();\n\nvar webRTCBuilder = $root.webRTCBuilder = function () {\n\n    /**\n     * Namespace webRTCBuilder.\n     * @exports webRTCBuilder\n     * @namespace\n     */\n    var webRTCBuilder = {};\n\n    webRTCBuilder.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof webRTCBuilder\n         * @interface IMessage\n         * @property {boolean} [isInitiator] Message isInitiator\n         * @property {string} [offer] Message offer\n         * @property {string} [answer] Message answer\n         * @property {webRTCBuilder.IIceCandidate} [iceCandidate] Message iceCandidate\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof webRTCBuilder\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {webRTCBuilder.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message isInitiator.\n         * @member {boolean}isInitiator\n         * @memberof webRTCBuilder.Message\n         * @instance\n         */\n        Message.prototype.isInitiator = false;\n\n        /**\n         * Message offer.\n         * @member {string}offer\n         * @memberof webRTCBuilder.Message\n         * @instance\n         */\n        Message.prototype.offer = \"\";\n\n        /**\n         * Message answer.\n         * @member {string}answer\n         * @memberof webRTCBuilder.Message\n         * @instance\n         */\n        Message.prototype.answer = \"\";\n\n        /**\n         * Message iceCandidate.\n         * @member {(webRTCBuilder.IIceCandidate|null|undefined)}iceCandidate\n         * @memberof webRTCBuilder.Message\n         * @instance\n         */\n        Message.prototype.iceCandidate = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message type.\n         * @member {string|undefined} type\n         * @memberof webRTCBuilder.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"offer\", \"answer\", \"iceCandidate\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof webRTCBuilder.Message\n         * @static\n         * @param {webRTCBuilder.IMessage=} [properties] Properties to set\n         * @returns {webRTCBuilder.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link webRTCBuilder.Message.verify|verify} messages.\n         * @function encode\n         * @memberof webRTCBuilder.Message\n         * @static\n         * @param {webRTCBuilder.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.isInitiator != null && message.hasOwnProperty(\"isInitiator\")) writer.uint32( /* id 1, wireType 0 =*/8).bool(message.isInitiator);\n            if (message.offer != null && message.hasOwnProperty(\"offer\")) writer.uint32( /* id 2, wireType 2 =*/18).string(message.offer);\n            if (message.answer != null && message.hasOwnProperty(\"answer\")) writer.uint32( /* id 3, wireType 2 =*/26).string(message.answer);\n            if (message.iceCandidate != null && message.hasOwnProperty(\"iceCandidate\")) $root.webRTCBuilder.IceCandidate.encode(message.iceCandidate, writer.uint32( /* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof webRTCBuilder.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {webRTCBuilder.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.webRTCBuilder.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.isInitiator = reader.bool();\n                        break;\n                    case 2:\n                        message.offer = reader.string();\n                        break;\n                    case 3:\n                        message.answer = reader.string();\n                        break;\n                    case 4:\n                        message.iceCandidate = $root.webRTCBuilder.IceCandidate.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    webRTCBuilder.IceCandidate = function () {\n\n        /**\n         * Properties of an IceCandidate.\n         * @memberof webRTCBuilder\n         * @interface IIceCandidate\n         * @property {string} [candidate] IceCandidate candidate\n         * @property {string} [sdpMid] IceCandidate sdpMid\n         * @property {number} [sdpMLineIndex] IceCandidate sdpMLineIndex\n         */\n\n        /**\n         * Constructs a new IceCandidate.\n         * @memberof webRTCBuilder\n         * @classdesc Represents an IceCandidate.\n         * @constructor\n         * @param {webRTCBuilder.IIceCandidate=} [properties] Properties to set\n         */\n        function IceCandidate(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * IceCandidate candidate.\n         * @member {string}candidate\n         * @memberof webRTCBuilder.IceCandidate\n         * @instance\n         */\n        IceCandidate.prototype.candidate = \"\";\n\n        /**\n         * IceCandidate sdpMid.\n         * @member {string}sdpMid\n         * @memberof webRTCBuilder.IceCandidate\n         * @instance\n         */\n        IceCandidate.prototype.sdpMid = \"\";\n\n        /**\n         * IceCandidate sdpMLineIndex.\n         * @member {number}sdpMLineIndex\n         * @memberof webRTCBuilder.IceCandidate\n         * @instance\n         */\n        IceCandidate.prototype.sdpMLineIndex = 0;\n\n        /**\n         * Creates a new IceCandidate instance using the specified properties.\n         * @function create\n         * @memberof webRTCBuilder.IceCandidate\n         * @static\n         * @param {webRTCBuilder.IIceCandidate=} [properties] Properties to set\n         * @returns {webRTCBuilder.IceCandidate} IceCandidate instance\n         */\n        IceCandidate.create = function create(properties) {\n            return new IceCandidate(properties);\n        };\n\n        /**\n         * Encodes the specified IceCandidate message. Does not implicitly {@link webRTCBuilder.IceCandidate.verify|verify} messages.\n         * @function encode\n         * @memberof webRTCBuilder.IceCandidate\n         * @static\n         * @param {webRTCBuilder.IIceCandidate} message IceCandidate message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        IceCandidate.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.candidate != null && message.hasOwnProperty(\"candidate\")) writer.uint32( /* id 1, wireType 2 =*/10).string(message.candidate);\n            if (message.sdpMid != null && message.hasOwnProperty(\"sdpMid\")) writer.uint32( /* id 2, wireType 2 =*/18).string(message.sdpMid);\n            if (message.sdpMLineIndex != null && message.hasOwnProperty(\"sdpMLineIndex\")) writer.uint32( /* id 3, wireType 0 =*/24).uint32(message.sdpMLineIndex);\n            return writer;\n        };\n\n        /**\n         * Decodes an IceCandidate message from the specified reader or buffer.\n         * @function decode\n         * @memberof webRTCBuilder.IceCandidate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {webRTCBuilder.IceCandidate} IceCandidate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        IceCandidate.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.webRTCBuilder.IceCandidate();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.candidate = reader.string();\n                        break;\n                    case 2:\n                        message.sdpMid = reader.string();\n                        break;\n                    case 3:\n                        message.sdpMLineIndex = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return IceCandidate;\n    }();\n\n    return webRTCBuilder;\n}();\n\nvar signaling = $root.signaling = function () {\n\n    /**\n     * Namespace signaling.\n     * @exports signaling\n     * @namespace\n     */\n    var signaling = {};\n\n    signaling.Message = function () {\n\n        /**\n         * Properties of a Message.\n         * @memberof signaling\n         * @interface IMessage\n         * @property {signaling.IContent} [content] Message content\n         * @property {boolean} [isFirst] Message isFirst\n         * @property {boolean} [joined] Message joined\n         * @property {boolean} [ping] Message ping\n         * @property {boolean} [pong] Message pong\n         */\n\n        /**\n         * Constructs a new Message.\n         * @memberof signaling\n         * @classdesc Represents a Message.\n         * @constructor\n         * @param {signaling.IMessage=} [properties] Properties to set\n         */\n        function Message(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Message content.\n         * @member {(signaling.IContent|null|undefined)}content\n         * @memberof signaling.Message\n         * @instance\n         */\n        Message.prototype.content = null;\n\n        /**\n         * Message isFirst.\n         * @member {boolean}isFirst\n         * @memberof signaling.Message\n         * @instance\n         */\n        Message.prototype.isFirst = false;\n\n        /**\n         * Message joined.\n         * @member {boolean}joined\n         * @memberof signaling.Message\n         * @instance\n         */\n        Message.prototype.joined = false;\n\n        /**\n         * Message ping.\n         * @member {boolean}ping\n         * @memberof signaling.Message\n         * @instance\n         */\n        Message.prototype.ping = false;\n\n        /**\n         * Message pong.\n         * @member {boolean}pong\n         * @memberof signaling.Message\n         * @instance\n         */\n        Message.prototype.pong = false;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Message type.\n         * @member {string|undefined} type\n         * @memberof signaling.Message\n         * @instance\n         */\n        Object.defineProperty(Message.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"content\", \"isFirst\", \"joined\", \"ping\", \"pong\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Message instance using the specified properties.\n         * @function create\n         * @memberof signaling.Message\n         * @static\n         * @param {signaling.IMessage=} [properties] Properties to set\n         * @returns {signaling.Message} Message instance\n         */\n        Message.create = function create(properties) {\n            return new Message(properties);\n        };\n\n        /**\n         * Encodes the specified Message message. Does not implicitly {@link signaling.Message.verify|verify} messages.\n         * @function encode\n         * @memberof signaling.Message\n         * @static\n         * @param {signaling.IMessage} message Message message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Message.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.content != null && message.hasOwnProperty(\"content\")) $root.signaling.Content.encode(message.content, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.isFirst != null && message.hasOwnProperty(\"isFirst\")) writer.uint32( /* id 2, wireType 0 =*/16).bool(message.isFirst);\n            if (message.joined != null && message.hasOwnProperty(\"joined\")) writer.uint32( /* id 3, wireType 0 =*/24).bool(message.joined);\n            if (message.ping != null && message.hasOwnProperty(\"ping\")) writer.uint32( /* id 4, wireType 0 =*/32).bool(message.ping);\n            if (message.pong != null && message.hasOwnProperty(\"pong\")) writer.uint32( /* id 5, wireType 0 =*/40).bool(message.pong);\n            return writer;\n        };\n\n        /**\n         * Decodes a Message message from the specified reader or buffer.\n         * @function decode\n         * @memberof signaling.Message\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {signaling.Message} Message\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Message.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.signaling.Message();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.content = $root.signaling.Content.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.isFirst = reader.bool();\n                        break;\n                    case 3:\n                        message.joined = reader.bool();\n                        break;\n                    case 4:\n                        message.ping = reader.bool();\n                        break;\n                    case 5:\n                        message.pong = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Message;\n    }();\n\n    signaling.Content = function () {\n\n        /**\n         * Properties of a Content.\n         * @memberof signaling\n         * @interface IContent\n         * @property {number} [id] Content id\n         * @property {boolean} [isEnd] Content isEnd\n         * @property {Uint8Array} [data] Content data\n         * @property {boolean} [isError] Content isError\n         */\n\n        /**\n         * Constructs a new Content.\n         * @memberof signaling\n         * @classdesc Represents a Content.\n         * @constructor\n         * @param {signaling.IContent=} [properties] Properties to set\n         */\n        function Content(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n        }\n\n        /**\n         * Content id.\n         * @member {number}id\n         * @memberof signaling.Content\n         * @instance\n         */\n        Content.prototype.id = 0;\n\n        /**\n         * Content isEnd.\n         * @member {boolean}isEnd\n         * @memberof signaling.Content\n         * @instance\n         */\n        Content.prototype.isEnd = false;\n\n        /**\n         * Content data.\n         * @member {Uint8Array}data\n         * @memberof signaling.Content\n         * @instance\n         */\n        Content.prototype.data = $util.newBuffer([]);\n\n        /**\n         * Content isError.\n         * @member {boolean}isError\n         * @memberof signaling.Content\n         * @instance\n         */\n        Content.prototype.isError = false;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields = void 0;\n\n        /**\n         * Content type.\n         * @member {string|undefined} type\n         * @memberof signaling.Content\n         * @instance\n         */\n        Object.defineProperty(Content.prototype, \"type\", {\n            get: $util.oneOfGetter($oneOfFields = [\"data\", \"isError\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new Content instance using the specified properties.\n         * @function create\n         * @memberof signaling.Content\n         * @static\n         * @param {signaling.IContent=} [properties] Properties to set\n         * @returns {signaling.Content} Content instance\n         */\n        Content.create = function create(properties) {\n            return new Content(properties);\n        };\n\n        /**\n         * Encodes the specified Content message. Does not implicitly {@link signaling.Content.verify|verify} messages.\n         * @function encode\n         * @memberof signaling.Content\n         * @static\n         * @param {signaling.IContent} message Content message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Content.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.id != null && message.hasOwnProperty(\"id\")) writer.uint32( /* id 1, wireType 0 =*/8).uint32(message.id);\n            if (message.isEnd != null && message.hasOwnProperty(\"isEnd\")) writer.uint32( /* id 2, wireType 0 =*/16).bool(message.isEnd);\n            if (message.data != null && message.hasOwnProperty(\"data\")) writer.uint32( /* id 3, wireType 2 =*/26).bytes(message.data);\n            if (message.isError != null && message.hasOwnProperty(\"isError\")) writer.uint32( /* id 4, wireType 0 =*/32).bool(message.isError);\n            return writer;\n        };\n\n        /**\n         * Decodes a Content message from the specified reader or buffer.\n         * @function decode\n         * @memberof signaling.Content\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {signaling.Content} Content\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Content.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.signaling.Content();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.uint32();\n                        break;\n                    case 2:\n                        message.isEnd = reader.bool();\n                        break;\n                    case 3:\n                        message.data = reader.bytes();\n                        break;\n                    case 4:\n                        message.isError = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n\n        return Content;\n    }();\n\n    return signaling;\n}();\n\nexport { Message, user, service, webChannel, channelBuilder, fullMesh, webRTCBuilder, signaling };\nexport default $root;\n","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar Subscription_1 = require('./Subscription');\nvar observeOn_1 = require('./operator/observeOn');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map"],"names":["tryCatcher","tryCatchTarget","apply","this","arguments","e","errorObject_1","errorObject","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError_1","UnsubscriptionError","createCommonjsModule","fn","module","exports","EventEmitter","_listeners","factory","Float32Array","writeFloat_f32_cpy","val","buf","pos","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","Uint8Array","buffer","le","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","Math","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","LongBits$1","Op","len","next","undefined","noop","State","writer","head","tail","states","Writer","writeByte","VarintOp","writeVarint64","writeFixed32","BufferWriter$1","call","writeStringBuffer","length","minimal$2","utf8","write","utf8Write","indexOutOfRange","reader","writeLength","RangeError","Reader","readLongVarint","bits","LongBits$2","i","Error","readFixed32_end","end","readFixed64","BufferReader$1","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","Boolean","__window","window","__self","self","WorkerGlobalScope","__global","global","_root","x","Array","isArray","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","_super","map","toString","join","name","stack","message","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","remove","isFunction_1","isFunction","trial","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","empty","value","error","complete","Symbol","root_1","root","for","rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Observer_1","SafeSubscriber","rxSubscriber_1","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscription_1","_parentSubscriber","observerOrNext","context","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","nextOrObserver","Subscriber_1","getSymbolObservable","$$observable","observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","toSubscriber_1","toSubscriber","_trySubscribe","forEach","PromiseCtor","Rx","config","Promise","resolve","reject","observable_1","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","copy","slice","SubjectSubscription_1","asObservable","Observable_1","commonjsGlobal","aspromise","ctx","params","offset","pending","base64_1","base64","string","n","charAt","ceil","b64","s64","encode","start","t","parts","chunk","j","String","fromCharCode","decode","c","charCodeAt","test","eventemitter","on","evt","off","listeners","emit","args","float_1","inquire_1","moduleName","utf8_1","read","c1","c2","pool_1","alloc","size","SIZE","MAX","slab","longbits","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","from","isString","Long","parseInt","fromString","low","high","unsigned","toLong","fromHash","hash","toHash","mask","part0","part1","part2","BufferWriter","_typeof","iterator","obj","AwaitValue","AsyncGenerator","gen","resume","key","arg","result","then","settle","done","type","front","back","_invoke","request","return","asyncIterator","throw","merge","dst","src","ifNotSet","keys","newError","CustomError","properties","defineProperty","get","captureStackTrace","util","asPromise","float","inquire","pool","LongBits","emptyArray","freeze","emptyObject","isNode","process","versions","node","isInteger","Number","isFinite","isset","isSet","prop","Buffer","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","str","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","set","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeBytesBuffer","byteLength","BufferReader","utf8$1","create_array","isBuffer","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","min","service$1","rpcCall","method","requestCtor","responseCtor","callback","response","setTimeout","endedByRPC","rpc_1","roots","minimal","configure","protobuf","build","rpc","minimal_1","minimal_2","minimal_3","minimal_4","$Reader","$Writer","$util","$root","Message","senderId","recipientId","isService","content","tag","user","full","$oneOfFields","Chunk","id","number","Type","valuesById","values","service","webChannel","init","initOk","ping","pong","InitData","Peers","generatedIds","topology","wcId","end2","members","channelBuilder","failed","Connection","wsUrl","isWrtcSupport","fullMesh","connectTo","connectedTo","joiningPeerId","joinSucceed","webRTCBuilder","isInitiator","offer","answer","iceCandidate","IceCandidate","candidate","sdpMid","sdpMLineIndex","signaling","isFirst","joined","Content","isEnd","data","isError","FilterOperator","predicate","thisArg","FilterSubscriber","count","filter","filter_1","BehaviorSubject","_value","getValue","enumerable","configurable","Subject_1","MapOperator","project","MapSubscriber","map_1","Action","scheduler","work","schedule","state","delay","AsyncAction","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action_1","QueueAction","AsyncAction_1","Scheduler","SchedulerAction","now","Date","AsyncScheduler","active","scheduled","action","shift","Scheduler_1","QueueScheduler","AsyncScheduler_1","QueueAction_1","Notification","kind","hasValue","observe","observer","do","accept","toObservable","of","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnOperator","ObserveOnSubscriber","dispatch","notification","scheduleMessage","ObserveOnMessage","Notification_1","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","observeOn_1","queue_1","queue","eventsCount","spliceCount","time","max"],"mappings":"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"}