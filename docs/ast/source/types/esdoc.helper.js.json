{
  "type": "File",
  "start": 0,
  "end": 2726,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 63,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 2726,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 63,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataType\n ",
        "start": 0,
        "end": 131,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * Signaling state event is fired when the {@link WebGroup} signaling state has changed.\n * @typedef {Object} SignalingStateEvent\n * @property {SignalingState} state One of the enum value.\n ",
        "start": 132,
        "end": 328,
        "loc": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * {@link WebGroup} state event is fired when the {@link WebGroup} state has changed.\n * @typedef {Object} WebGroupStateEvent\n * @property {WebChannelState} state One of the enum value.\n ",
        "start": 329,
        "end": 522,
        "loc": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * {@link WebGroup} message event is fired when a message has been received from a group.\n * @typedef {Object} MessageEvent\n * @property {number} id The identifier of the member who sent this message.\n * @property {DataType} data The data.\n * @property {boolean} isBroadcast Equals to true if the data is sent\n * via {@link WebGroup#send} and false if sent via {@link WebGroup#sendTo}.\n ",
        "start": 523,
        "end": 916,
        "loc": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * {@link WebGroup} member event is fired when a group member has joined or left.\n * @typedef {Object} MemberEvent\n * @property {number} id The identifier of the member.\n ",
        "start": 917,
        "end": 1094,
        "loc": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
        "start": 1095,
        "end": 1635,
        "loc": {
          "start": {
            "line": 28,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJSHttpServer|NodeJSHttpsServer} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
        "start": 1636,
        "end": 2311,
        "loc": {
          "start": {
            "line": 39,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
        "start": 2312,
        "end": 2406,
        "loc": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
        "start": 2407,
        "end": 2529,
        "loc": {
          "start": {
            "line": 54,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {NodeJSHttpServer} https://nodejs.org/api/http.html#http_class_http_server\n ",
        "start": 2530,
        "end": 2625,
        "loc": {
          "start": {
            "line": 57,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {NodeJSHttpsServer} https://nodejs.org/api/https.html#https_class_https_server\n ",
        "start": 2626,
        "end": 2725,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataType\n ",
      "start": 0,
      "end": 131,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Signaling state event is fired when the {@link WebGroup} signaling state has changed.\n * @typedef {Object} SignalingStateEvent\n * @property {SignalingState} state One of the enum value.\n ",
      "start": 132,
      "end": 328,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} state event is fired when the {@link WebGroup} state has changed.\n * @typedef {Object} WebGroupStateEvent\n * @property {WebChannelState} state One of the enum value.\n ",
      "start": 329,
      "end": 522,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} message event is fired when a message has been received from a group.\n * @typedef {Object} MessageEvent\n * @property {number} id The identifier of the member who sent this message.\n * @property {DataType} data The data.\n * @property {boolean} isBroadcast Equals to true if the data is sent\n * via {@link WebGroup#send} and false if sent via {@link WebGroup#sendTo}.\n ",
      "start": 523,
      "end": 916,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} member event is fired when a group member has joined or left.\n * @typedef {Object} MemberEvent\n * @property {number} id The identifier of the member.\n ",
      "start": 917,
      "end": 1094,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
      "start": 1095,
      "end": 1635,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJSHttpServer|NodeJSHttpsServer} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
      "start": 1636,
      "end": 2311,
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
      "start": 2312,
      "end": 2406,
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
      "start": 2407,
      "end": 2529,
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 56,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJSHttpServer} https://nodejs.org/api/http.html#http_class_http_server\n ",
      "start": 2530,
      "end": 2625,
      "loc": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJSHttpsServer} https://nodejs.org/api/https.html#https_class_https_server\n ",
      "start": 2626,
      "end": 2725,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * Is a helper type representing types that can be sent/received over a web group.\n * @typedef {string|Uint8Array} DataType\n ",
      "start": 0,
      "end": 131,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Signaling state event is fired when the {@link WebGroup} signaling state has changed.\n * @typedef {Object} SignalingStateEvent\n * @property {SignalingState} state One of the enum value.\n ",
      "start": 132,
      "end": 328,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} state event is fired when the {@link WebGroup} state has changed.\n * @typedef {Object} WebGroupStateEvent\n * @property {WebChannelState} state One of the enum value.\n ",
      "start": 329,
      "end": 522,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} message event is fired when a message has been received from a group.\n * @typedef {Object} MessageEvent\n * @property {number} id The identifier of the member who sent this message.\n * @property {DataType} data The data.\n * @property {boolean} isBroadcast Equals to true if the data is sent\n * via {@link WebGroup#send} and false if sent via {@link WebGroup#sendTo}.\n ",
      "start": 523,
      "end": 916,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * {@link WebGroup} member event is fired when a group member has joined or left.\n * @typedef {Object} MemberEvent\n * @property {number} id The identifier of the member.\n ",
      "start": 917,
      "end": 1094,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroup} constructor.\n * @typedef {Object} WebGroupOptions\n * @property {Topology} topology Topology identifier\n * (Full mesh is the only one supported by Netflux for now).\n * @property {string} signalingURL Signaling URL for WebRTC.\n * @property {RTCIceServer[]} iceServers Array of Ice servers for WebRTC.\n * @property {boolean} autoRejoin Whether to automatically rejoin the web group\n * on disconnect or not. Its value may be modified after {@link WebGroup}\n * instantiation at any time.\n ",
      "start": 1095,
      "end": 1635,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The options to be passed into {@link WebGroupBotServer} constructor.\n * @typedef {Object} WebGroupBotServerOptions\n * @property {Topology} [topology] See WebGroupOptions.topology\n * @property {string} [signalingURL] See WebGroupOptions.signalingURL\n * @property {RTCIceServer[]} [iceServers] See WebGroupOptions.iceServers\n * @property {boolean} [autoRejoin] See WebGroupOptions.autoRejoin\n * @property {Object} bot Server related options of the bot.\n * @property {NodeJSHttpServer|NodeJSHttpsServer} bot.server NodeJS http(s) server.\n * @property {string} [bot.url] Bot server URL.\n * @property {boolean} [bot.perMessageDeflate] Enable/disable permessage-deflate.\n ",
      "start": 1636,
      "end": 2311,
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RTCIceServer} https://developer.mozilla.org/en/docs/Web/API/RTCIceServer\n ",
      "start": 2312,
      "end": 2406,
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Uint8Array} https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n ",
      "start": 2407,
      "end": 2529,
      "loc": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 56,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJSHttpServer} https://nodejs.org/api/http.html#http_class_http_server\n ",
      "start": 2530,
      "end": 2625,
      "loc": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {NodeJSHttpsServer} https://nodejs.org/api/https.html#https_class_https_server\n ",
      "start": 2626,
      "end": 2725,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2726,
      "end": 2726,
      "loc": {
        "start": {
          "line": 63,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 0
        }
      }
    }
  ]
}