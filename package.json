{
  "name": "netflux",
  "description": "Abstract peer to peer client transport API. Implementations based on WebRTC and webSocket to be done.",
  "main": "dist/netflux.js",
  "version": "0.0.0-semrelease",
  "scripts": {
    "postinstall": "./node_modules/.bin/jspm install",
    "prebuild": "rm -rf coverage",
    "build": "./node_modules/.bin/rollup -o dist/netflux.es2015.js -f umd -n nf src/index.js & ./node_modules/.bin/webpack",
    "signalling-up": "kill `cat /tmp/sigver.pid`; node ./node_modules/sigver/server.js & echo \"$!\" > /tmp/sigver.pid",
    "pretest": "npm run build && npm run signalling-up",
    "test": "karma start",
    "testin": "npm run test -- --browsers",
    "doc": "jsdoc -d doc -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "postdoc": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "docdev": "jsdoc -d doc -p -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "postdocdev": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "commit": "git-cz",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coast-team/netflux.git"
  },
  "keywords": [
    "netflux",
    "webRTC",
    "p2p",
    "peer",
    "network"
  ],
  "author": "Philippe Kalitine <philippe.kalitine@gmail.com> (http://philippe.kalitine.name/)",
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/coast-team/netflux/issues"
  },
  "homepage": "https://github.com/coast-team/netflux#readme",
  "config": {
    "ghooks": {
      "pre-commit": "npm run test"
    },
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "webrtc-adapter": "^1.1.0"
  },
  "devDependencies": {
    "babel-core": "^6.3.17",
    "babel-eslint": "^6.0.0",
    "babel-loader": "^6.2.1",
    "babel-polyfill": "^6.3.14",
    "babel-preset-es2015": "^6.3.13",
    "commitizen": "^2.4.6",
    "cz-conventional-changelog": "^1.1.5",
    "eslint": "^2.2.0",
    "ghooks": "^1.0.1",
    "ink-docstrap": "^1.1.2",
    "isparta": "^4.0.0",
    "istanbul": "gotwarlost/istanbul.git#source-map",
    "jasmine": "^2.4.1",
    "jasmine-core": "^2.4.1",
    "jsdoc": "^3.4.0",
    "jspm": "^0.16.33",
    "karma": "^0.13.15",
    "karma-babel-preprocessor": "^6.0.1",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "douglasduteil/karma-coverage#next",
    "karma-firefox-launcher": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-jspm": "^2.0.2",
    "karma-sourcemap-loader": "^0.3.6",
    "rollup": "^0.26.0",
    "semantic-release": "^4.3.5",
    "sigver": "^7.1.0",
    "standard": "^7.0.1",
    "webpack": "^1.12.11"
  },
  "jspm": {
    "dependencies": {},
    "devDependencies": {
      "babel": "npm:babel-core@^5.8.24",
      "babel-runtime": "npm:babel-runtime@^5.8.24",
      "core-js": "npm:core-js@^1.1.4"
    }
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "nf",
      "describe",
      "xdescribe",
      "it",
      "expect",
      "beforeEach",
      "afterEach",
      "beforeAll",
      "afterAll",
      "DOMException",
      "RTCPeerConnection",
      "RTCSessionDescription",
      "RTCDataChannel",
      "RTCIceCandidate",
      "WebSocket",
      "TextEncoder",
      "TextDecoder"
    ],
    "ignore": [
      "dist/*",
      "karma*.js",
      "config.js",
      "webpack.config.js"
    ]
  }
}
